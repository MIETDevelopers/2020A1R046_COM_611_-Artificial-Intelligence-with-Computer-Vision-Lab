{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "de5e2e2f",
   "metadata": {},
   "source": [
    "# Sample Code In Python for Find-S Algorithm\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6e6edf9b",
   "metadata": {},
   "source": [
    "\n",
    "## Importing Libraries\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "id": "dc6efb72",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import csv"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "250fcd68",
   "metadata": {},
   "source": [
    "# Uploading data set"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "id": "b49b33ec",
   "metadata": {},
   "outputs": [],
   "source": [
    "data = pd.read_csv('enjoysport.csv')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "42ab755a",
   "metadata": {},
   "source": [
    "# Creating array excluding the last column"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "id": "9e5a8684",
   "metadata": {},
   "outputs": [],
   "source": [
    "concepts = np.array(data)[:,:-1]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "10438865",
   "metadata": {},
   "source": [
    "# Running the code with training data set"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "id": "c0347246",
   "metadata": {},
   "outputs": [],
   "source": [
    "def train(con,tar):\n",
    "    for i,val in enumerate(tar):\n",
    "        if val=='yes':\n",
    "            specific_h = con[i].copy()\n",
    "            break\n",
    "            \n",
    "    for i,val in enumerate(con):\n",
    "        if tar[i]=='yes':\n",
    "            for x in range(len(specific_h)):\n",
    "                if val[x] != specific_h[x]:\n",
    "                    specific_h[x] = '?'\n",
    "                else:\n",
    "                    pass\n",
    "    return specific_h "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7e6c962d",
   "metadata": {},
   "source": [
    "# Generating the output"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "id": "1cd19d46",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['sunny' 'warm' '?' 'strong' '?' '?']\n"
     ]
    }
   ],
   "source": [
    "print(train(concepts,target))"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
